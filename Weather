import math

def calculate_weather_index(temperature, humidity, wind_speed):
    return (0.5 * math.pow(temperature, 2)) - (0.2 * humidity) + (0.1 * wind_speed) - 15

def classify_weather(index):
    if index > 25:
        return "Sunny"
    elif index > 15:
        return "Cloudy"
    elif index > 5:
        return "Rainy"
    elif index > -5:
        return "Stormy"
    else:
        return "Snow"

def solve_hardcoded():
    print("\nHard-Coded Variables")
    temperature, humidity, wind_speed = 25, 50, 10
    index = calculate_weather_index(temperature, humidity, wind_speed)
    category = classify_weather(index)
    print(f"Weather Index: {index:.2f}")
    print(f"Weather Category: {category}\n")

def solve_keyboard_input():
    print("\nKeyboard Input")
    temperature = float(input("Enter Temperature (°C): "))
    humidity = float(input("Enter Humidity (%): "))
    wind_speed = float(input("Enter Wind Speed (km/h): "))
    index = calculate_weather_index(temperature, humidity, wind_speed)
    category = classify_weather(index)
    print(f"Weather Index: {index:.2f}")
    print(f"Weather Category: {category}\n")

def solve_file_input():
    print("\nFile Input")
    file_path = input("Enter the file path: ")
    try:
        with open(file_path, "r") as file:
            lines = file.readlines()
            for line_num, line in enumerate(lines, start=1):
                try:
                    temperature, humidity, wind_speed = map(float, line.strip().split(","))
                    index = calculate_weather_index(temperature, humidity, wind_speed)
                    category = classify_weather(index)
                    print(f"Line {line_num}: Weather Index: {index:.2f}, Weather Category: {category}")
                except ValueError:
                    print(f"Line {line_num}: Invalid input: {line.strip()}")
    except FileNotFoundError:
        print("File not found. Please check the file path.")

def solve_single_input():
    print("\nSingle Input")
    temperature = float(input("Enter Temperature (°C): "))
    humidity = float(input("Enter Humidity (%): "))
    wind_speed = float(input("Enter Wind Speed (km/h): "))
    index = calculate_weather_index(temperature, humidity, wind_speed)
    category = classify_weather(index)
    print(f"Weather Index: {index:.2f}")
    print(f"Weather Category: {category}\n")

def solve_multiple_inputs():
    print("\nMultiple Inputs")
    print("Enter multiple sets of Temperature, Humidity, Wind Speed values (comma-separated), one per line. Type 'END' to finish.")
    inputs = []
    while True:
        line = input()
        if line.strip().upper() == "END":
            break
        inputs.append(line)

    for line_num, line in enumerate(inputs, start=1):
        try:
            temperature, humidity, wind_speed = map(float, line.strip().split(","))
            index = calculate_weather_index(temperature, humidity, wind_speed)
            category = classify_weather(index)
            print(f"Set {line_num}: Weather Index: {index:.2f}, Weather Category: {category}")
        except ValueError:
            print(f"Set {line_num}: Invalid input: {line.strip()}")

def main():
    while True:
        print("\nWeather Prediction Options:")
        print("1: Hard-Coded Variables")
        print("2: Keyboard Input")
        print("3: Read from a File")
        print("4: Single Set of Inputs")
        print("5: Multiple Sets of Inputs")
        print("6: Exit")
        
        choice = input("Select an option (1-6): ")
        if choice == "1":
            solve_hardcoded()
        elif choice == "2":
            solve_keyboard_input()
        elif choice == "3":
            solve_file_input()
        elif choice == "4":
            solve_single_input()
        elif choice == "5":
            solve_multiple_inputs()
        elif choice == "6":
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please select a valid option.")

if __name__ == "__main__":
    main()
